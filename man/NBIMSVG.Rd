% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mainfunction0806.R
\name{NBIMSVG}
\alias{NBIMSVG}
\title{Main Spatial Variable Gene Identification Function}
\usage{
NBIMSVG(
  spelist,
  c_alpha,
  num_cores = 1,
  acrate = 0.01,
  alpha = 0.05,
  gamma1 = sqrt(0.001),
  gamma2 = 0.01,
  min_iter = 30,
  max_iter = 100,
  speci_iter = 12
)
}
\arguments{
\item{spelist}{A list of length m. Each element is a sublist containing:
\itemize{
\item{expression_matrix: Matrix (spots x genes)}
\item{location_matrix: Matrix (spots x coordinates)}
}}

\item{c_alpha}{A list of length m, each element being a covariates matrix.}

\item{num_cores}{Number of CPU cores for parallelization (default: 1).}

\item{acrate}{:the minimum threshold for EBLO convergence.}

\item{alpha}{: Significance level, default is 0.05.}

\item{gamma1}{:hyperparameter of the slab and spike prior of beta. Default is sqrt(0.001).}

\item{gamma2}{:hyperparameter of the bi-level structure of alpha. We set gamma2 to 0.01, 0.005, and 0.001 for more than four, three, and two or fewer slices, respectively.}

\item{min_iter}{: the minimum number of iteration. Default to 30.}

\item{max_iter}{: the maximum number of iteration. Default to 100.}

\item{speci_iter}{: Number of times the early convergence criterion is met.}
}
\value{
A list with:
\itemize{
\item{initial_result: Posterior probability u in 2D coordinates}
\item{post_mean_uk: Posterior probability u after maximization}
\item{threshold: SV/non-SV gene classification threshold}
\item{identify_number: Binary vector (1=SV gene, 0=non-SV gene)}
\item{svgenename: Names of identified SV genes}
}
}
\description{
Main Spatial Variable Gene Identification Function
}
\examples{
# Simulate 4 datasets with different spatial patterns
\donttest{
seed <- 123
result1 <- sim_create(gene_size = 20, svgene_size = 0.5, sv_mark = c(0.8, 0.8), inf_size = 0.5, seed = seed)
result2 <- sim_create(gene_size = 20, svgene_size = 0.5, sv_mark = c(0.5, 0.5), inf_size = 0.5, seed = seed + 1)
result3 <- sim_create(gene_size = 20, svgene_size = 0.5, sv_mark = c(0.5, 0.5), inf_size = 0.5, seed = seed + 2)
result4 <- sim_create(gene_size = 20, svgene_size = 0.5, sv_mark = c(0.5, 0.5), inf_size = 0.5, seed = seed + 3)

# Format input for NBIMSVG()
spelist <- list(list(result1[[1]], result1[[2]]),
                list(result2[[1]], result2[[2]]),
                list(result3[[1]], result3[[2]]),
                list(result4[[1]], result4[[2]])) #expression matrix and location
c_alpha <- list(result1[[3]],  result2[[3]],result3[[3]],result4[[3]])# covariates

# Run analysis (parallel with 4 cores)
result <- NBIMSVG(spelist = spelist,c_alpha = c_alpha,num_cores = 1)

# Print key outputs:
# 1. Posterior mean probabilities
print(result[[2]])

# 2. Binary classification of SV genes
print(result[[4]])
}
}
